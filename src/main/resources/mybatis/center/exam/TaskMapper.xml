<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hxy.nzxy.stexam.center.exam.dao.TaskExamDao">

	<select id="get" resultType="com.hxy.nzxy.stexam.domain.TaskDO">
		select
            id,
            exam_year,
            exam_month,
            type,
            begin_date,
            end_date,
            begin_date_append,
            end_date_append,
            begin_date1,
            end_date1,
            begin_date_append1,
            end_date_append1,
            arrange_begin_date,
            arrange_end_date,
            remark,
            status,
            confirm_status,
            audit_status,
            operator,
            update_date,
            enabled_flag
		from exam_task
		where id = #{value}
	</select>

	<select id="list" resultType="com.hxy.nzxy.stexam.domain.TaskDO">
		select
	        id,
	        exam_year,
	        exam_month,
			type,
	        remark,
	        status,
	        confirm_status,
	        audit_status,
	        operator,
	        update_date
		 from exam_task
        <where>
         and enabled_flag=1
		  <if test="id != null and id != ''"> and id = #{id} </if>
		  <if test="examYear != null and examYear != ''"> and exam_year = #{examYear} </if>
		  <if test="examMonth != null and examMonth != ''"> and exam_month = #{examMonth} </if>
			<if test="type != null and enabledFlag != ''">and type = #{type} </if>
		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  <if test="status != null and status != ''"> and status = #{status} </if>
		  <if test="confirmStatus != null and confirmStatus != ''"> and confirm_status = #{confirmStatus} </if>
		  <if test="auditStatus != null and auditStatus != ''"> and audit_status = #{auditStatus} </if>
		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="taskList" resultType="com.hxy.nzxy.stexam.domain.TaskDO">
		select
	        id,
			exam_year,
			exam_month,
			type
		 from exam_task
        <where>
         and enabled_flag=1
			and confirm_status = 'b'

			AND begin_date1 &lt;= now()
			AND end_date1 &gt;= now()
		  <if test="id != null and id != ''"> and id = #{id} </if>
		</where>
	</select>

	<select id="seachBkTimeSetlist" resultType="com.hxy.nzxy.stexam.domain.TaskDO">
		select
		id,
		exam_year,
		exam_month,
		type,
		begin_date,
		end_date,
		begin_date_append,
		end_date_append,
		begin_date1,
		end_date1,
		begin_date_append1,
		end_date_append1,
		arrange_begin_date,
		arrange_end_date,
		remark,
		status,
		confirm_status,
		audit_status,
		operator,
		update_date
		from exam_task
		<where>
			and enabled_flag=1
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="examYear != null and examYear != ''"> and exam_year = #{examYear} </if>
			<if test="examMonth != null and examMonth != ''"> and exam_month = #{examMonth} </if>
			<if test="beginDate != null and beginDate != ''"> and begin_date = #{beginDate} </if>
			<if test="endDate != null and endDate != ''"> and end_date = #{endDate} </if>
			<if test="beginDateAppend != null and beginDateAppend != ''"> and begin_date_append = #{beginDateAppend} </if>
			<if test="endDateAppend != null and endDateAppend != ''"> and end_date_append = #{endDateAppend} </if>
			<if test="beginDate1 != null and beginDate1 != ''"> and begin_date1 = #{beginDate1} </if>
			<if test="endDate1 != null and endDate1 != ''"> and end_date1 = #{endDate1} </if>
			<if test="beginDateAppend1 != null and beginDateAppend1 != ''"> and begin_date_append1 = #{beginDateAppend1} </if>
			<if test="endDateAppend1 != null and endDateAppend1 != ''"> and end_date_append1 = #{endDateAppend1} </if>
			<if test="arrangeBeginDate != null and arrangeBeginDate != ''"> and arrange_begin_date = #{arrangeBeginDate} </if>
			<if test="arrangeEndDate != null and arrangeEndDate != ''"> and arrange_end_date = #{arrangeEndDate} </if>
			<if test="remark != null and remark != ''"> and remark = #{remark} </if>
			<if test="status != null and status != ''"> and status = #{status} </if>
			<if test="confirmStatus != null and confirmStatus != ''"> and confirm_status = #{confirmStatus} </if>
			<if test="auditStatus != null and auditStatus != ''"> and audit_status = #{auditStatus} </if>
			<if test="enabledFlag != null and enabledFlag != ''"> and enabled_flag = #{enabledFlag} </if>
			<if test="type != null and enabledFlag != ''">and type = #{type} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="serchTaskAll" resultType="com.hxy.nzxy.stexam.domain.TaskDO">
		select
		id,
		exam_year,
		exam_month,
		type,
		begin_date,
		end_date,
		begin_date_append,
		end_date_append,
		begin_date1,
		end_date1,
		begin_date_append1,
		end_date_append1,
		arrange_begin_date,
		arrange_end_date,
		remark,
		status,
		confirm_status,
		audit_status
		from exam_task
		<where>
			and enabled_flag=1
			<choose>
			<when test="type != null and type != ''">
				and type =#{type}
			</when>
			<otherwise>
				and type ='a'
			</otherwise>
		</choose>
		<if test="date != null and date != ''">
			AND begin_date &lt;= now()
			AND end_date &gt;= now() </if>
		<if test="date_append != null and date_append != ''">
				AND begin_date_append &lt;= now()
				AND end_date_append &gt;= now() </if>
		<if test="date1 != null and date1 != ''">
				AND begin_date1 &lt;= now()
				AND end_date1 &gt;= now() </if>
			<if test="date_append1 != null and date_append1 != ''">
				AND begin_date_append1 &lt;= now()
				AND end_date_append1 &gt;= now() </if>
			<if test="confirm_status!= null and confirm_status != ''">
				AND confirm_status =#{confirm_status}
			</if>
			<if test="arrange_date != null and arrange_date != ''">
				AND arrange_begin_date &lt;= now()
				AND arrange_end_date &gt;= now() </if>

			<if test="audit_status != null and audit_status != ''">
				AND audit_status =#{audit_status}
			</if>
	</where>


				order by id desc
	</select>
 	<select id="count" resultType="int">
		select count(*) from exam_task
		 <where>
             and enabled_flag=1
		  <if test="id != null and id != ''"> and id = #{id} </if>
		  <if test="examYear != null and examYear != ''"> and exam_year = #{examYear} </if>
		  <if test="examMonth != null and examMonth != ''"> and exam_month = #{examMonth} </if>
		  <if test="beginDate != null and beginDate != ''"> and begin_date = #{beginDate} </if>
		  <if test="endDate != null and endDate != ''"> and end_date = #{endDate} </if>
		  <if test="beginDateAppend != null and beginDateAppend != ''"> and begin_date_append = #{beginDateAppend} </if>
		  <if test="endDateAppend != null and endDateAppend != ''"> and end_date_append = #{endDateAppend} </if>
		  <if test="beginDate1 != null and beginDate1 != ''"> and begin_date1 = #{beginDate1} </if>
		  <if test="endDate1 != null and endDate1 != ''"> and end_date1 = #{endDate1} </if>
		  <if test="beginDateAppend1 != null and beginDateAppend1 != ''"> and begin_date_append1 = #{beginDateAppend1} </if>
		  <if test="endDateAppend1 != null and endDateAppend1 != ''"> and end_date_append1 = #{endDateAppend1} </if>
		  <if test="arrangeBeginDate != null and arrangeBeginDate != ''"> and arrange_begin_date = #{arrangeBeginDate} </if>
		  <if test="arrangeEndDate != null and arrangeEndDate != ''"> and arrange_end_date = #{arrangeEndDate} </if>
		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  <if test="status != null and status != ''"> and status = #{status} </if>
		  <if test="confirmStatus != null and confirmStatus != ''"> and confirm_status = #{confirmStatus} </if>
		  <if test="auditStatus != null and auditStatus != ''"> and audit_status = #{auditStatus} </if>
		  <if test="enabledFlag != null and enabledFlag != ''"> and enabled_flag = #{enabledFlag} </if>
			<if test="type != null and type != ''">and type = #{type} </if>
		</where>
	</select>
	<select id="bkcount" resultType="int">
		select count(1) from stu_student_course a,exa_exam_course b,stu_student_course c where a.exam_courseid=b.id  and b.id=c.exam_courseid and b.exam_taskid
		id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
and a.enabled_flag=1 and b.enabled_flag=1 and c.enabled_flag=1
	</select>
	<insert id="save" parameterType="com.hxy.nzxy.stexam.domain.TaskDO" >
		insert into exam_task
		(
			exam_year, 
			exam_month,
			type,
			begin_date,
			end_date,
			begin_date_append,
			end_date_append,
			begin_date1,
			end_date1,
			begin_date_append1,
			end_date_append1,
			arrange_begin_date,
			arrange_end_date,
			remark, 
			status, 
			confirm_status, 
			audit_status, 
			operator, 
			update_date
		)
		values
		(
			#{examYear}, 
			#{examMonth}, 
			#{type},
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			#{remark}, 
			#{status}, 
			#{confirmStatus}, 
			#{auditStatus}, 
			#{operator}, 
			now()
		)
	</insert>
	 
	<update id="update" parameterType="com.hxy.nzxy.stexam.domain.TaskDO">
		update exam_task 
		<set>

			<if test="beginDate != null">begin_date = #{beginDate}, </if>
			<if test="endDate != null">end_date = #{endDate}, </if>
			<if test="beginDateAppend != null">begin_date_append = #{beginDateAppend}, </if>
			<if test="endDateAppend != null">end_date_append = #{endDateAppend}, </if>
			<if test="beginDate1 != null">begin_date1 = #{beginDate1}, </if>
			<if test="endDate1 != null">end_date1 = #{endDate1}, </if>
			<if test="beginDateAppend1 != null">begin_date_append1 = #{beginDateAppend1}, </if>
			<if test="endDateAppend1 != null">end_date_append1 = #{endDateAppend1}, </if>
			<if test="arrangeBeginDate != null">arrange_begin_date = #{arrangeBeginDate}, </if>
			<if test="arrangeEndDate != null">arrange_end_date = #{arrangeEndDate} </if>
			<if test="type != null">type = #{type} </if>


		</set>
		where id = #{id}
	</update>

	<update id="updateStatus" parameterType="com.hxy.nzxy.stexam.domain.TaskDO">
		update exam_task
		<set>

			<if test="confirmStatus != null">confirm_status = #{confirmStatus}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="auditStatus != null">audit_status = #{auditStatus}, </if>



		</set>
		where id = #{id}
	</update>
	<update id="remove">
		update exam_task set enabled_flag =0  where id = #{value}
	</update>
	
	<update id="batchRemove">
        update  exam_task set enabled_flag =0 where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	<select id="getLastTask" resultType="com.hxy.nzxy.stexam.domain.TaskDO">
		select
            id
		from exam_task
 		where  enabled_flag=1
   		and confirm_status='b'
  	order by id desc  limit 1
	</select>

	<!--&lt;!&ndash;验证&ndash;&gt;-->
	<!--<select id="listCZ" resultType="com.hxy.nzxy.stexam.domain.TaskDO">-->
		<!--select-->
		<!--exam_year,-->
		<!--exam_month,-->
		<!--remark,-->
		<!--status,-->
		<!--confirm_status,-->
		<!--audit_status-->
		<!--from exa_task-->
		<!--<where>-->
			<!--enabled_flag = 1-->
		<!--</where>-->

	<!--</select>-->
	<!--批量导入-->
	<insert id="saveBatch" parameterType="java.util.List">
		insert into exa_task
		(
		exam_year,
		exam_month,
		type,
		begin_date,
		end_date,
		begin_date_append,
		end_date_append,
		begin_date1,
		end_date1,
		begin_date_append1,
		end_date_append1,
		arrange_begin_date,
		arrange_end_date,
		remark,
		status,
		confirm_status,
		audit_status,
		operator,
		update_date
		)
		values
		<foreach collection="list" item="bean" index="index" open="" close="" separator=",">
			(
			#{bean.examYear},
			#{bean.examMonth},
			#{bean.type},
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			now(),
			#{bean.remark},
			#{bean.status},
			#{bean.confirmStatus},
			#{bean.auditStatus},
			#{bean.operator},
			now()
			)
		</foreach>

	</insert>

</mapper>