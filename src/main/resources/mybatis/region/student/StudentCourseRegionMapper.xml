<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hxy.nzxy.stexam.region.student.dao.StudentCourseRegionDao">

	<select id="get" resultType="com.hxy.nzxy.stexam.domain.StudentCourseDO">
		select
            id,
            studentid,
            regionid,
            child_regionid,
            exam_courseid,
            type,
            status,
            arrange_status,
            operator,
            update_date,
            db_flag,
            enabled_flag
		from stu_student_course
		where id = #{value}
	</select>

	<select id="list" resultType="com.hxy.nzxy.stexam.domain.StudentCourseDO">
		select
	        id,
	        studentid,
	        regionid,
	        child_regionid,
	        exam_courseid,
	        type,
	        status,
	        arrange_status,
	        operator,
	        update_date,
	        db_flag,
	        enabled_flag
		 from stu_student_course
        <where>
         and enabled_flag=1
		  <if test="id != null and id != ''"> and id = #{id} </if>
		  <if test="studentid != null and studentid != ''"> and studentid = #{studentid} </if>
		  <if test="regionid != null and regionid != ''"> and regionid = #{regionid} </if>
		  <if test="childRegionid != null and childRegionid != ''"> and child_regionid = #{childRegionid} </if>
		  <if test="examCourseid != null and examCourseid != ''"> and exam_courseid = #{examCourseid} </if>
		  <if test="type != null and type != ''"> and type = #{type} </if>
		  <if test="status != null and status != ''"> and status = #{status} </if>
		  <if test="arrangeStatus != null and arrangeStatus != ''"> and arrange_status = #{arrangeStatus} </if>
		  <if test="dbFlag != null and dbFlag != ''"> and db_flag = #{dbFlag} </if>
		  <if test="enabledFlag != null and enabledFlag != ''"> and enabled_flag = #{enabledFlag} </if>
		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>


	<select id="selectSameExamTime" resultType="int">

select COUNT(1) from exa_exam_course where enabled_flag=1 and  id in
		<foreach item="examCourse" collection="examCourseid" open="(" separator="," close=")">
		#{examCourse}
		</foreach>
and exam_timeid in (select b.exam_timeid from  stu_student_course a,exa_exam_course b
		where  a.exam_courseid =b.id and   a.enabled_flag=1 and  b.enabled_flag=1  and a.studentid=#{studentid}
)
	</select>
 	<select id="count" resultType="int">
		select count(*) from stu_student_course
		 <where>
             and enabled_flag=1
		  <if test="id != null and id != ''"> and id = #{id} </if>
		  <if test="studentid != null and studentid != ''"> and studentid = #{studentid} </if>
		  <if test="regionid != null and regionid != ''"> and regionid = #{regionid} </if>
		  <if test="childRegionid != null and childRegionid != ''"> and child_regionid = #{childRegionid} </if>
		  <if test="examCourseid != null and examCourseid != ''"> and exam_courseid = #{examCourseid} </if>
		  <if test="type != null and type != ''"> and type = #{type} </if>
		  <if test="status != null and status != ''"> and status = #{status} </if>
		  <if test="arrangeStatus != null and arrangeStatus != ''"> and arrange_status = #{arrangeStatus} </if>
		  <if test="dbFlag != null and dbFlag != ''"> and db_flag = #{dbFlag} </if>
		  <if test="enabledFlag != null and enabledFlag != ''"> and enabled_flag = #{enabledFlag} </if>
		</where>
	</select>
	 
	<insert id="save" parameterType="com.hxy.nzxy.stexam.domain.StudentCourseDO" useGeneratedKeys="true" keyProperty="id">
		insert into stu_student_course
		(
			studentid, 
			regionid, 
			child_regionid, 
			exam_courseid, 
			type, 
			status, 
			arrange_status, 
			operator, 
			update_date, 
			db_flag
		)
		values
		(
			#{studentid}, 
			#{regionid}, 
			#{childRegionid}, 
			#{examCourseid}, 
			#{type}, 
			#{status}, 
			#{arrangeStatus}, 
			#{operator}, 
			now(), 
			#{dbFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.hxy.nzxy.stexam.domain.StudentCourseDO">
		update stu_student_course 
		<set>
			<if test="studentid != null">studentid = #{studentid}, </if>
			<if test="regionid != null">regionid = #{regionid}, </if>
			<if test="childRegionid != null">child_regionid = #{childRegionid}, </if>
			<if test="examCourseid != null">exam_courseid = #{examCourseid}, </if>
			<if test="type != null">type = #{type}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="arrangeStatus != null">arrange_status = #{arrangeStatus}, </if>
			<if test="operator != null">operator = #{operator}, </if>
			update_date = now(), 			<if test="dbFlag != null">db_flag = #{dbFlag}</if>

		</set>
		where id = #{id}
	</update>
	<update id="remove">
		update stu_student_course set enabled_flag =0  where id = #{value}
	</update>
	
	<update id="batchRemove">
        update  stu_student_course set enabled_flag =0 where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	<select id="countStudent" resultType="int">
		select
		count(*)
		from v_stu_student_speciality a
		left join v_stu_student  b on a.studentid =b.id and b.enabled_flag=1
		left join pla_speciality_record  c on c.id = a.speciality_recordid and c.enabled_flag=1
		<where>
			and a.enabled_flag=1
			<if test="certificateNo != null and certificateNo != ''">and b.certificate_no = #{certificateNo} </if>
			<if test="studentid != null and studentid != ''"> and a.studentid = #{studentid} and b.collegeid = #{collegeid}</if>
			<if test="name != null and name != ''"> and b.name = #{name} </if>
			and a.audit_status ='b'
			and a.status not in ( 'b', 'f' )
			and b.classify ='c'
		</where>
	</select>
	<select id="listStudent" resultType="com.hxy.nzxy.stexam.domain.StudentSpecialityDO">
		select
		a.id,
		a.studentid,
		b.name,
		a.regionid,
		a.child_regionid,
		a.create_date,
		c.specialityid,
		a.speciality_recordid
		from v_stu_student_speciality a
		left join v_stu_student  b on a.studentid =b.id and b.enabled_flag=1
		left join pla_speciality_record  c on c.id = a.speciality_recordid and c.enabled_flag=1
		<where>
			and a.enabled_flag=1
			<if test="certificateNo != null and certificateNo != ''">and b.certificate_no = #{certificateNo} </if>
			<if test="studentid != null and studentid != ''"> and a.studentid = #{studentid} and b.collegeid = #{collegeid}</if>
			<if test="name != null and name != ''"> and b.name = #{name} </if>
			and a.audit_status ='b'
			and a.status not in ( 'b', 'f' )
			and b.classify ='c'
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by a.id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="listCourse" resultType="com.hxy.nzxy.stexam.domain.ExamCourseDO">
		SELECT
		f.id,
		b.studentid,
		b.speciality_recordid,
		b.create_date,
		c.courseid,
		d.id AS exam_courseid,
		e.exam_date,
		e.segment,
		f.id as sfbk,
		g.grade
		FROM
		v_stu_student_speciality b
		LEFT JOIN  pla_speciality_course  c ON c.speciality_recordid = b.speciality_recordid and c.enabled_flag = 1
		LEFT JOIN exa_exam_course  d ON d.courseid = c.courseid and d.enabled_flag = 1 AND d.auditStatus='b'
		LEFT JOIN exa_exam_time  e ON e.id = d.exam_timeid and e.enabled_flag = 1
		LEFT JOIN stu_student_course f ON f.studentid = b.studentid
		AND f.exam_courseid = d.id and f.enabled_flag = 1
		LEFT JOIN stu_score  g ON g.studentid = b.studentid
		AND g.courseid = c.id  and g.enabled_flag = 1 AND g.grade >= 60
		<where>
			and b.audit_status ='b'
			and b.status not in ( 'b', 'f' )
			and d.exam_taskid=#{examTaskid}
			and b.id=#{id}
			and b.enabled_flag=1
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by b.id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="listCourseNew" resultType="com.hxy.nzxy.stexam.domain.ExamCourseDO">
		SELECT
		f.id,
		b.studentid,
		b.speciality_recordid,
		b.create_date,
		c.courseid,
		d.id AS exam_courseid,
		e.exam_date,
		e.segment,
		f.id as sfbk,
		g.grade
		FROM
		v_stu_student_speciality b
		LEFT JOIN pla_speciality_record  a ON a.id = b.speciality_recordid and a.enabled_flag = 1
		LEFT JOIN pla_speciality_course  c ON c.speciality_recordid = a.new_speciality_recordid and c.enabled_flag = 1
		LEFT JOIN exa_exam_course  d ON d.courseid = c.courseid and d.enabled_flag = 1 AND d.auditStatus='b'
		LEFT JOIN exa_exam_time  e ON e.id = d.exam_timeid and e.enabled_flag = 1
		LEFT JOIN stu_student_course f ON f.studentid = b.studentid
		AND f.exam_courseid = d.id and f.enabled_flag = 1
		LEFT JOIN stu_score  g ON g.studentid = b.studentid
		AND g.courseid = c.id  and g.enabled_flag = 1 AND g.grade >= 60
		<where>
			and b.audit_status ='b'
			and b.status not in ( 'b', 'f' )
			and d.exam_taskid=#{examTaskid}
			and b.id=#{id}
			and b.enabled_flag=1
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by b.id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="listCourseCountNew" resultType="int">
		select
		count(*)
		FROM
		v_stu_student_speciality b
		LEFT JOIN pla_speciality_record  a ON a.id = b.speciality_recordid and a.enabled_flag = 1
		LEFT JOIN pla_speciality_course  c ON c.speciality_recordid = a.new_speciality_recordid and c.enabled_flag = 1
		LEFT JOIN exa_exam_course  d ON d.courseid = c.courseid and d.enabled_flag = 1 AND d.auditStatus='b'
		LEFT JOIN exa_exam_time  e ON e.id = d.exam_timeid and e.enabled_flag = 1
		LEFT JOIN stu_student_course f ON f.studentid = b.studentid
		AND f.exam_courseid = d.id and f.enabled_flag = 1
		LEFT JOIN stu_score  g ON g.studentid = b.studentid
		AND g.courseid = c.id  and g.enabled_flag = 1 AND g.grade >= 60
		<where>
			and b.audit_status ='b'
			and b.status not in ( 'b', 'f' )
			and d.exam_taskid=#{examTaskid}
			and b.id=#{id}
			and b.enabled_flag=1
		</where>
	</select>
	<select id="listCourseCount" resultType="int">
		select
		count(*)
		FROM
		v_stu_student_speciality b
		LEFT JOIN  pla_speciality_course  c ON c.speciality_recordid = b.speciality_recordid and c.enabled_flag = 1
		LEFT JOIN exa_exam_course  d ON d.courseid = c.courseid and d.enabled_flag = 1 AND d.auditStatus='b'
		LEFT JOIN exa_exam_time  e ON e.id = d.exam_timeid and e.enabled_flag = 1
		LEFT JOIN stu_student_course f ON f.studentid = b.studentid
		AND f.exam_courseid = d.id and f.enabled_flag = 1
		LEFT JOIN stu_score  g ON g.studentid = b.studentid
		AND g.courseid = c.id  and g.enabled_flag = 1 AND g.grade >= 60
		<where>
			and b.audit_status ='b'
			and b.status not in ( 'b', 'f' )
			and d.exam_taskid=#{examTaskid}
			and b.id=#{id}
			and b.enabled_flag=1
		</where>
	</select>

	<select id="listTask" resultType="com.hxy.nzxy.stexam.domain.TaskDO">
		select
		id,
		exam_year,
		exam_month
		from exam_task
		<where>
			and enabled_flag=1
			and confirm_status = 'b'

			<if test="id != null and id != ''"> and id = #{id} </if>
			AND begin_date1 &lt;= now()
			AND end_date1 &gt;= now()
		</where>
	</select>

	<select id="selectstudentCourse" resultType="com.hxy.nzxy.stexam.domain.StudentCourseDO">
		select  a.studentid,a.exam_courseid,c.courseid ,b.name,'课程已报考' reason
		from  stu_student_course a
		left join v_stu_student  b on b.id=a.studentid and b.enabled_flag=1
		left join exa_exam_course c on c.id =a.exam_courseid and c.enabled_flag=1 AND c.auditStatus='b'
		where 1=1
		<foreach item="stuid" collection="studentidList" open="" separator="" close="">
			<foreach item="examid" collection="examCourseList" open="and" separator="or" close="">
				(a.studentid =#{stuid} and a.exam_courseid=#{examid} and a.enabled_flag=1)
			</foreach>
		</foreach>

	</select>
	<insert id="batchSave">
		insert into stu_student_course(studentid,
		regionid,
		child_regionid,
		exam_courseid,
		type,
		status,
		arrange_status,
		operator,
		update_date,
		db_flag) values
		<foreach item="item" index="index" collection="list"
				 separator=",">
			(#{item.studentid},#{item.regionid},#{item.childRegionid},#{item.examCourseid},#{item.type},#{item.status},#{item.arrangeStatus},#{item.operator},now(),#{item.dbFlag})
		</foreach>
	</insert>
	<select id="selectstudentCjCourse" resultType="com.hxy.nzxy.stexam.domain.StudentCourseDO">
		select a.id,a.studentid,a.courseid,b.name,'考试已通过' reason
		from stu_score a
		left join v_stu_student  b on b.id=a.studentid and b.enabled_flag=1
		where 1=1
		<foreach item="stuid" collection="studentidList" open="" separator="" close="">
			<foreach item="courseid" collection="courseList1" open="and" separator="or" close="">
				(a.studentid =#{stuid} and a.courseid=#{courseid} and a.enabled_flag=1)
			</foreach>
		</foreach>

	</select>
</mapper>